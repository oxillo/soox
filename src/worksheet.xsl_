<xsl:package
  name="soox:worksheet"
  package-version="1.0"
  version="3.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xd="http://www.oxygenxml.com/ns/doc/xsl"
  xmlns:sml="http://schemas.openxmlformats.org/spreadsheetml/2006/main"
  xmlns:soox="simple-open-office-xml"
  xmlns:s="soox"
  exclude-result-prefixes="#all" extension-element-prefixes="soox">
  
  <xd:doc scope="package">
    <xd:desc>
      <xd:p><xd:b>Created on:</xd:b> Oct 10, 2021</xd:p>
      <xd:p><xd:b>Author:</xd:b> Olivier XILLO</xd:p>
      <xd:p/>
    </xd:desc>
  </xd:doc>
  
  <xsl:mode name="worksheet" visibility="public"/>
  
  <xsl:include href="spreadsheet-templates.xsl"/>
  <xsl:variable name="ns-sml" select="'http://schemas.openxmlformats.org/spreadsheetml/2006/main'"/>
  
  
  
  
  <xd:doc>
    <xd:desc>
      <xd:p></xd:p>
    </xd:desc>
  </xd:doc>
  <xsl:template match="s:worksheet" mode="worksheet">
    <xsl:element name="worksheet" namespace="http://schemas.openxmlformats.org/spreadsheetml/2006/main">
      
      <!--sheetPr xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" filterMode="false">
        <pageSetUpPr fitToPage="false"/>
      </sheetPr-->
      
      <!-- compute the cell range min row/col-> max row/col -->
      <xsl:if test="descendant::s:cell"> 
        <xsl:element name="dimension" namespace="{$ns-sml}">
          <xsl:variable name="all-rows" select="distinct-values(descendant::s:cell/@row)"/>
          <xsl:variable name="first-row" select="min($all-rows)"/>
          <xsl:variable name="last-row" select="max($all-rows)"/>
          <xsl:variable name="all-columns" select="distinct-values(descendant::s:cell/@col)"/>
          <xsl:variable name="first-column" select="min($all-columns) => xs:integer() => soox:convertColumnNumberToLetters()"/>
          <xsl:variable name="last-column" select="max($all-columns) => xs:integer() => soox:convertColumnNumberToLetters()"/>
          <xsl:attribute name="ref" select="concat($first-column, $first-row, ':', $last-column,$last-row)"/>
        </xsl:element>
      </xsl:if>
      
      <!--xsl:element name="sheetViews" namespace="{$ns-sml}">
        <xsl:element name="sheetView" namespace="{$ns-sml}">
          <xsl:attribute name="tabSelected">0</xsl:attribute>
          <xsl:attribute name="workbookViewId">0</xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="sheetFormatPr" namespace="{$ns-sml}">
        <xsl:attribute name="baseColWidth">10</xsl:attribute>
        <xsl:attribute name="defaultRowHeight">14.25</xsl:attribute>
      </xsl:element-->
      
      <xsl:apply-templates mode="#current"/>
      
      <!--xsl:element name="pageMargins" namespace="{$ns-sml}">
        <xsl:attribute name="left">0.7</xsl:attribute>
        <xsl:attribute name="right">0.7</xsl:attribute>
        <xsl:attribute name="top">0.75</xsl:attribute>
        <xsl:attribute name="bottom">0.75</xsl:attribute>
        <xsl:attribute name="header">0.3</xsl:attribute>
        <xsl:attribute name="footer">0.3</xsl:attribute>
      </xsl:element-->
    </xsl:element>
  </xsl:template>
  
  <xsl:template match="s:data"  mode="worksheet">
    
    <!--cols xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main">
      <col min="1" max="1" width="20.69921875" customWidth="1"/>
      <col min="2" max="2" width="70.69921875" customWidth="1"/>
    </cols-->
    <sheetData xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main">
      <xsl:for-each-group select="s:cell" group-by="@row" >
        <xsl:sort select="current-grouping-key()" order="ascending"/>
        <xsl:element name="row" namespace="http://schemas.openxmlformats.org/spreadsheetml/2006/main">
          <xsl:attribute name="r" select="current-grouping-key()"/>
          <!--xsl:attribute name="spans">1:2</xsl:attribute-->
          <xsl:attribute name="customFormat">false</xsl:attribute>
          <xsl:attribute name="ht">12.8</xsl:attribute>
          <xsl:attribute name="hidden">false</xsl:attribute>
          <xsl:attribute name="customHeight">false</xsl:attribute>
          <xsl:attribute name="outlineLevel">0</xsl:attribute>
          <xsl:attribute name="collapsed">false</xsl:attribute>
          <xsl:apply-templates select="current-group()" mode="#current"/>
        </xsl:element>
      </xsl:for-each-group>
    </sheetData>
  </xsl:template>
  
  <xsl:template match="s:cell"  mode="worksheet">
      <xsl:apply-templates mode="#current"/>
  </xsl:template>
  
  <xsl:template match="s:v"  mode="worksheet" xml:space="default">
    <xsl:param name="shared-strings" as="xs:string*" tunnel="yes"/>
    
    <xsl:variable name="option-date-as-number" select="true()"/>
    
    
    <xsl:variable name="is-number" select="number(text()) ne xs:double('NaN')"/>
    <xsl:variable name="is-date" select="text() castable as xs:date"/>
    
    <!-- Check if the value is defined in shared-strings and, if so , get its index -->
    <xsl:variable name="shared-string-index" select="index-of($shared-strings,text())"/>
    
    <xsl:element name="c" namespace="http://schemas.openxmlformats.org/spreadsheetml/2006/main">
      <xsl:attribute name="r" select="soox:convertColumnNumberToLetters(ancestor::s:cell/@col)||ancestor::s:cell/@row"/>
      <xsl:attribute name="s">
        <xsl:choose>
          <xsl:when test="$is-date and $option-date-as-number">1</xsl:when>
          <xsl:otherwise>0</xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <!-- content type of cell: 'b' for boolean, 'd' for date in ISO 8601, 'e' for error, 
           'inlineStr' for rich Text string, 's' for shared string, 'n' for number, 'str' for formula string 
           cf ยง 18.18.11 ST_CellType (Cell Type) -->
      <xsl:attribute name="t">
        <xsl:choose>
          <xsl:when test="$is-date and $option-date-as-number">n</xsl:when>
          <xsl:when test="$is-date">d</xsl:when>
          <xsl:when test="$shared-string-index">s</xsl:when>
          <xsl:when test="$is-number">n</xsl:when>
          <xsl:otherwise>inlineString</xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      
      <xsl:element name="v" namespace="http://schemas.openxmlformats.org/spreadsheetml/2006/main">
        <xsl:variable name="shared-string-index" select="index-of($shared-strings,text())"/>
        <xsl:choose>
          <xsl:when test="count($shared-string-index) ge 1">
            <xsl:value-of select="$shared-string-index[1] - 1"/>
          </xsl:when>
          <xsl:when test="$is-date and $option-date-as-number">
            <xsl:value-of select="days-from-duration(xs:date(text()) - xs:date('1900-01-01')) + 2"/>
            <!-- +2 is for libreoffice not having the same reference as Excel -->
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="text()"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:element>  
    </xsl:element>
    
    
  </xsl:template>
  
  <xsl:template match="text()" mode="worksheet"/>
    
</xsl:package>